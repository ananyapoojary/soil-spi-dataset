import requests
import csv
import time
import random
from tqdm import tqdm

# List of specific coordinates
coordinates = [
(13.1, 74.8), (13.1, 74.9), (13.1, 75), (13.1, 75.1), (13.1, 75.2), 
(13.1, 75.3), (13.1, 75.4), (13.1, 75.5), (13.1, 75.6), (13.1, 75.7), 
(13.1, 75.8), (13.1, 75.9), (13.1, 76), (13.1, 76.1), (13.1, 76.2), 
(13.1, 76.3), (13.1, 76.4), (13.1, 76.5), (13.1, 76.6), (13.1, 76.7), 
(13.1, 76.8), (13.1, 76.9), (13.1, 77), (13.1, 77.1), (13.1, 77.2), 
(13.1, 77.3), (13.1, 77.4), (13.1, 77.5), (13.1, 77.6), (13.1, 77.7), 
(13.1, 77.8), (13.1, 77.9), (13.1, 78), (13.1, 78.1), (13.1, 78.2), 
(13.1, 78.3), (13.1, 78.4), (13.1, 78.5), (13.1, 78.6), (13.1, 78.7), 
(13.1, 78.8), (13.1, 78.9), (13.1, 79), (13.1, 79.1), (13.1, 79.2), 
(13.1, 79.3), (13.1, 79.4), (13.1, 79.5), (13.1, 79.6), (13.1, 79.7), 
(13.1, 79.8), (13.1, 79.9), (13.1, 80), (13.1, 80.1), (13.1, 80.2), 
(13.1, 92.9), (13.1, 93), (13.2, 74.8), (13.2, 74.9), (13.2, 75), 
(13.2, 75.1), (13.2, 75.2), (13.2, 75.3), (13.2, 75.4), (13.2, 75.5), 
(13.2, 75.6), (13.2, 75.7), (13.2, 75.8), (13.2, 75.9), (13.2, 76), 
(13.2, 76.1), (13.2, 76.2), (13.2, 76.3), (13.2, 76.4), (13.2, 76.5), 
(13.2, 76.6), (13.2, 76.7), (13.2, 76.8), (13.2, 76.9), (13.2, 77), 
(13.2, 77.1), (13.2, 77.2), (13.2, 77.3), (13.2, 77.4), (13.2, 77.5), 
(13.2, 77.6), (13.2, 77.7), (13.2, 77.8), (13.2, 77.9), (13.2, 78), 
(13.2, 78.1), (13.2, 78.2), (13.2, 78.3), (13.2, 78.4), (13.2, 78.5), 
(13.2, 78.6), (13.2, 78.7), (13.2, 78.8), (13.2, 78.9), (13.2, 79), 
(13.2, 79.1), (13.2, 79.2), (13.2, 79.3), (13.2, 79.4), (13.2, 79.5), 
(13.2, 79.6), (13.2, 79.7), (13.2, 79.8), (13.2, 79.9), (13.2, 80), 
(13.2, 80.1), (13.2, 80.2), (13.2, 80.3), (13.2, 92.9), (13.2, 93), 
(13.3, 74.8), (13.3, 74.9), (13.3, 75), (13.3, 75.1), (13.3, 75.2), 
(13.3, 75.3), (13.3, 75.4), (13.3, 75.5), (13.3, 75.6), (13.3, 75.7), 
(13.3, 75.8), (13.3, 75.9), (13.3, 76), (13.3, 76.1), (13.3, 76.2), 
(13.3, 76.3), (13.3, 76.4), (13.3, 76.5), (13.3, 76.6), (13.3, 76.7), 
(13.3, 76.8), (13.3, 76.9), (13.3, 77), (13.3, 77.1), (13.3, 77.2), 
(13.3, 77.3), (13.3, 77.4), (13.3, 77.5), (13.3, 77.6), (13.3, 77.7), 
(13.3, 77.8), (13.3, 77.9), (13.3, 78), (13.3, 78.1), (13.3, 78.2), 
(13.3, 78.3), (13.3, 78.4), (13.3, 78.5), (13.3, 78.6), (13.3, 78.7), 
(13.3, 78.8), (13.3, 78.9), (13.3, 79), (13.3, 79.1), (13.3, 79.2), 
(13.3, 79.3), (13.3, 79.4), (13.3, 79.5), (13.3, 79.6), (13.3, 79.7), 
(13.3, 79.8), (13.3, 79.9), (13.3, 80), (13.3, 80.1), (13.3, 80.2), 
(13.3, 80.3), (13.3, 92.9), (13.3, 93), 

(13.4, 74.7), (13.4, 74.8), (13.4, 74.9), (13.4, 75), (13.4, 75.1), (13.4, 75.2), (13.4, 75.3), (13.4, 75.4), (13.4, 75.5), (13.4, 75.6), 
(13.4, 75.7), (13.4, 75.8), (13.4, 75.9), (13.4, 76), (13.4, 76.1), (13.4, 76.2), (13.4, 76.3), (13.4, 76.4), (13.4, 76.5), (13.4, 76.6), 
(13.4, 76.7), (13.4, 76.8), (13.4, 76.9), (13.4, 77), (13.4, 77.1), (13.4, 77.2), (13.4, 77.3), (13.4, 77.4), (13.4, 77.5), (13.4, 77.6), 
(13.4, 77.7), (13.4, 77.8), (13.4, 77.9), (13.4, 78), (13.4, 78.1), (13.4, 78.2), (13.4, 78.3), (13.4, 78.4), (13.4, 78.5), (13.4, 78.6), 
(13.4, 78.7), (13.4, 78.8), (13.4, 78.9), (13.4, 79), (13.4, 79.1), (13.4, 79.2), (13.4, 79.3), (13.4, 79.4), (13.4, 79.5), (13.4, 79.6), 
(13.4, 79.7), (13.4, 79.8), (13.4, 79.9), (13.4, 80), (13.4, 80.1), (13.4, 80.2), (13.4, 80.3), (13.4, 92.9), (13.4, 93), (13.4, 93.1), 
(13.4, 93.2), (13.4, 93.3), (13.4, 93.4), (13.4, 93.5), (13.4, 93.6), (13.4, 93.7), (13.4, 93.8), (13.4, 93.9), (13.4, 94), (13.4, 94.1), 
(13.4, 94.2), (13.4, 94.3), (13.4, 94.4), (13.4, 94.5), (13.4, 94.6), (13.4, 94.7), (13.4, 94.8), (13.4, 94.9), (13.4, 95), (13.4, 95.1), 
(13.4, 95.2), (13.4, 95.3), (13.4, 95.4), (13.4, 95.5), (13.4, 95.6), (13.4, 95.7), (13.4, 95.8), (13.4, 95.9), (13.4, 96), (13.4, 96.1), 
(13.4, 96.2), (13.4, 96.3), (13.4, 96.4), (13.4, 96.5), (13.4, 96.6), (13.4, 96.7), (13.4, 96.8), (13.4, 96.9), (13.4, 97), (13.4, 97.1), 
(13.4, 97.2), (13.4, 97.3), (13.4, 97.4), (13.4, 97.5), (13.4, 97.6), (13.4, 97.7), (13.4, 97.8), (13.4, 97.9), (13.4, 98), (13.5, 68), 
(13.5, 68.1), (13.5, 68.2), (13.5, 68.3), (13.5, 68.4), (13.5, 68.5), (13.5, 68.6), (13.5, 68.7), (13.5, 68.8), (13.5, 68.9), (13.5, 69), 
(13.5, 69.1), (13.5, 69.2), (13.5, 69.3), (13.5, 69.4), (13.5, 69.5), (13.5, 69.6), (13.5, 69.7), (13.5, 69.8), (13.5, 69.9), (13.5, 70), 
(13.5, 70.1), (13.5, 70.2), (13.5, 70.3), (13.5, 70.4), (13.5, 70.5), (13.5, 70.6), (13.5, 70.7), (13.5, 70.8), (13.5, 70.9), (13.5, 71), 
(13.5, 71.1), (13.5, 71.2), (13.5, 71.3), (13.5, 71.4), (13.5, 71.5), (13.5, 71.6), (13.5, 71.7), (13.5, 71.8), (13.5, 71.9), (13.5, 72), 
(13.5, 72.1), (13.5, 72.2), (13.5, 72.3), (13.5, 72.4), (13.5, 72.5), (13.5, 72.6), (13.5, 72.7), (13.5, 72.8), (13.5, 72.9), (13.5, 73), 
(13.5, 73.1), (13.5, 73.2), (13.5, 73.3), (13.5, 73.4), (13.5, 73.5), (13.5, 73.6), (13.5, 73.7), (13.5, 73.8), (13.5, 73.9), (13.5, 74), 
(13.5, 74.1), (13.5, 74.2), (13.5, 74.3), (13.5, 74.4), (13.5, 74.5), (13.5, 74.6), (13.5, 74.7), (13.5, 74.8), (13.5, 74.9), (13.5, 75), 
(13.5, 75.1), (13.5, 75.2), (13.5, 75.3), (13.5, 75.4), (13.5, 75.5), (13.5, 75.6), (13.5, 75.7), (13.5, 75.8), (13.5, 75.9), (13.5, 76), 


(13.5, 76.1), (13.5, 76.2), (13.5, 76.3), (13.5, 76.4), (13.5, 76.5), (13.5, 76.6), (13.5, 76.7), (13.5, 76.8), (13.5, 76.9), (13.5, 77),  
(13.5, 77.1), (13.5, 77.2), (13.5, 77.3), (13.5, 77.4), (13.5, 77.5), (13.5, 77.6), (13.5, 77.7), (13.5, 77.8), (13.5, 77.9), (13.5, 78),  
(13.5, 78.1), (13.5, 78.2), (13.5, 78.3), (13.5, 78.4), (13.5, 78.5), (13.5, 78.6), (13.5, 78.7), (13.5, 78.8), (13.5, 78.9), (13.5, 79),  
(13.5, 79.1), (13.5, 79.2), (13.5, 79.3), (13.5, 79.4), (13.5, 79.5), (13.5, 79.6), (13.5, 79.7), (13.5, 79.8), (13.5, 79.9), (13.5, 80),  
(13.5, 80.1), (13.5, 93)




]

def get_soil_properties(lat, lon, max_retries=5):
    url = f"https://rest.isric.org/soilgrids/v2.0/properties/query?lon={lon}&lat={lat}&depths=0-5cm&properties=phh2o,soc,bdod,clay,sand,silt,cec,ocd,nitrogen,wv0010,wv0033,wv1500,cfvo,ocs"

    for attempt in range(max_retries):
        try:
            response = requests.get(url, timeout=30)

            if response.status_code == 200:
                data = response.json()
                results = {"Latitude": lat, "Longitude": lon}

                # Extract soil properties dynamically
                layers = data.get("properties", {}).get("layers", [])
                for layer in layers:
                    property_name = layer.get("name", "Unknown")
                    depths = layer.get("depths", [])

                    if depths and "values" in depths[0] and "mean" in depths[0]["values"]:
                        results[property_name] = depths[0]["values"]["mean"]
                    else:
                        results[property_name] = "N/A"  

                return results

            elif response.status_code == 429:  # Rate limit exceeded
                wait_time = (2 ** attempt) + random.uniform(0, 1)
                time.sleep(wait_time)

        except requests.Timeout:
            time.sleep(5)

        except requests.RequestException:
            time.sleep(5)

    return {"Latitude": lat, "Longitude": lon, "Error": "No data available"}

# Fetch data
soil_data = []
for lat, lon in tqdm(coordinates, desc="Fetching Soil Data", unit="location"):
    print(f"Fetching data for Latitude: {lat}, Longitude: {lon}")
    soil_data.append(get_soil_properties(lat, lon))

# Extract all field names dynamically
all_fields = set()
for entry in soil_data:
    all_fields.update(entry.keys())

# Save to CSV
csv_filename = "b13.csv"
with open(csv_filename, mode="w", newline="") as file:
    writer = csv.DictWriter(file, fieldnames=list(all_fields))
    writer.writeheader()
    writer.writerows(soil_data)

print(f"\nâœ… Soil data successfully saved to {csv_filename}")
